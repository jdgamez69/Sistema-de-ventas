
package vistas;

import conexion.Conexion;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class InterProductos extends javax.swing.JInternalFrame {
    
    private int id_producto;
    
    public InterProductos() {
        initComponents();
        this.setSize(new Dimension(600, 520));
        this.setTitle("Productos");
        this.CategoriaTablaProductos();
        this.CargarComboCategoria();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txt_idProducto1 = new rojeru_san.rslabel.RSLabelBorderRound();
        rSLabelBorderRound4 = new rojeru_san.rslabel.RSLabelBorderRound();
        rSLabelBorderRound5 = new rojeru_san.rslabel.RSLabelBorderRound();
        txt_nombre = new rojeru_san.rsfield.RSTextField();
        txt_precio = new rojeru_san.rsfield.RSTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_descripcion = new javax.swing.JTextField();
        txt_cantidad = new rojeru_san.rsfield.RSTextField();
        btn_Eliminar = new rojeru_san.rsbutton.RSButtonForma();
        btn_nuevoProducto = new rojeru_san.rsbutton.RSButtonMetro();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox_iva = new RSMaterialComponent.RSComboBoxMaterial();
        jComboBox_categoria = new RSMaterialComponent.RSComboBoxMaterial();
        txt_idProducto2 = new rojeru_san.rslabel.RSLabelBorderRound();
        txt_idProducto3 = new rojeru_san.rslabel.RSLabelBorderRound();
        btn_Actualizar = new rojeru_san.rsbutton.RSButtonMetro();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_producto = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_idProducto1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_idProducto1.setText("Categoria");
        jPanel1.add(txt_idProducto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 80, 30));

        rSLabelBorderRound4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rSLabelBorderRound4.setText("Precio");
        jPanel1.add(rSLabelBorderRound4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 80, 30));

        rSLabelBorderRound5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rSLabelBorderRound5.setText("Cantidad");
        rSLabelBorderRound5.setRound(50);
        jPanel1.add(rSLabelBorderRound5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 80, 30));

        txt_nombre.setPlaceholder("");
        txt_nombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_nombreFocusLost(evt);
            }
        });
        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });
        jPanel1.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 130, 30));

        txt_precio.setPlaceholder("");
        txt_precio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_precioFocusLost(evt);
            }
        });
        txt_precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_precioActionPerformed(evt);
            }
        });
        jPanel1.add(txt_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 130, 30));

        jLabel2.setText("DESCRIPCION ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 100, 20));
        jPanel1.add(txt_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 160, 40));

        txt_cantidad.setPlaceholder("");
        txt_cantidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_cantidadFocusLost(evt);
            }
        });
        jPanel1.add(txt_cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 130, 30));

        btn_Eliminar.setText("Eliminar");
        btn_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 170, 120, 40));

        btn_nuevoProducto.setText("Nuevo Producto");
        btn_nuevoProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoProductoActionPerformed(evt);
            }
        });
        jPanel1.add(btn_nuevoProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 120, 40));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("*");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 20, 20));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("*");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 20, 20));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("*");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 20, 20));

        jComboBox_iva.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione Iva:", "No grava iva", "19%" }));
        jPanel1.add(jComboBox_iva, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));

        jComboBox_categoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione categoria:", "RSItem 2", "RSItem 3", "RSItem 4" }));
        jPanel1.add(jComboBox_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, -1, -1));

        txt_idProducto2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_idProducto2.setText("Nombre");
        jPanel1.add(txt_idProducto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 80, 30));

        txt_idProducto3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_idProducto3.setText("Iva");
        jPanel1.add(txt_idProducto3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 80, 30));

        btn_Actualizar.setText("Actualizar");
        btn_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, 120, 40));

        jTable_producto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_producto);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 550, 250));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 490));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void txt_nombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nombreFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreFocusLost

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreActionPerformed

    private void txt_precioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_precioFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_precioFocusLost

    private void txt_precioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_precioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_precioActionPerformed

    private void txt_cantidadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cantidadFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cantidadFocusLost

    private void btn_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EliminarActionPerformed
//        if(!txt_descripcion.getText().isEmpty()){
//            Categoria categoria = new Categoria();
//            Ctrl_Categoria controlCategoria = new Ctrl_Categoria();
//            
//            categoria.setTipo_categoria(txt_descripcion.getText().trim());
//            if(!controlCategoria.eliminar(id_categoria)){
//                JOptionPane.showMessageDialog(null, "Categoria eliminada");
//                txt_descripcion.setText("");
//                this.CategoriaTablaCategoria();
//            }else{
//                JOptionPane.showMessageDialog(null, "Error al eliminar Categoria");
//            }
//        }else{
//            JOptionPane.showMessageDialog(null, "Seleccione una categoria");
//
    }//GEN-LAST:event_btn_EliminarActionPerformed

    private void btn_nuevoProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoProductoActionPerformed
        FrmNuevoProducto nuevoproducto = new FrmNuevoProducto();
        nuevoproducto.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_nuevoProductoActionPerformed

    private void btn_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ActualizarActionPerformed
//        if(!txt_descripcion.getText().isEmpty()){
//            Categoria categoria = new Categoria();
//            Ctrl_Categoria controlCategoria = new Ctrl_Categoria();
//            
//            categoria.setTipo_categoria(txt_descripcion.getText().trim());
//            if(controlCategoria.actualizar(categoria, id_categoria)){
//                JOptionPane.showMessageDialog(null, "Categoria Actualizada");
//                txt_descripcion.setText("");
//                this.CategoriaTablaCategoria();
//            }else{
//                JOptionPane.showMessageDialog(null, "Error al actualizar Categoria");
//            }
//        }else{
//            JOptionPane.showMessageDialog(null, "Seleccione una categoria");
//        }        
    }//GEN-LAST:event_btn_ActualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.rsbutton.RSButtonMetro btn_Actualizar;
    private rojeru_san.rsbutton.RSButtonForma btn_Eliminar;
    private rojeru_san.rsbutton.RSButtonMetro btn_nuevoProducto;
    private RSMaterialComponent.RSComboBoxMaterial jComboBox_categoria;
    private RSMaterialComponent.RSComboBoxMaterial jComboBox_iva;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_producto;
    private rojeru_san.rslabel.RSLabelBorderRound rSLabelBorderRound4;
    private rojeru_san.rslabel.RSLabelBorderRound rSLabelBorderRound5;
    private rojeru_san.rsfield.RSTextField txt_cantidad;
    private javax.swing.JTextField txt_descripcion;
    private rojeru_san.rslabel.RSLabelBorderRound txt_idProducto1;
    private rojeru_san.rslabel.RSLabelBorderRound txt_idProducto2;
    private rojeru_san.rslabel.RSLabelBorderRound txt_idProducto3;
    private rojeru_san.rsfield.RSTextField txt_nombre;
    private rojeru_san.rsfield.RSTextField txt_precio;
    // End of variables declaration//GEN-END:variables
    
private void CargarComboCategoria() {
        Connection cn = Conexion.conectar();
        String sql = "select * from categoria";
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_categoria.removeAllItems();
            jComboBox_categoria.addItem("Seleccione categoria:");
            while (rs.next()) {
                jComboBox_categoria.addItem(rs.getString("tipo_categoria"));
            }
            cn.close();
        } catch (SQLException e) {
            System.out.println("¡Error al cargar categorias!");
        }
    }

    /**
     *
     * metodo para mostrar todas los Producto registradas
     *
     */
    String descripcionCategoria = "";
    double precio = 0.0;
    int porcentajeIva = 0;
    double IVA = 0;

    private void CategoriaTablaProductos() {
        Connection con = Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select p.id_producto, p.nombre, p.cantidad, p.precio_unitario, p.descripcion, p.porcentajeIva, c.tipo_categoria, p.estado from producto As P, categoria As c where p.id_categoria = c.id_categoria";
        Statement st;

        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
//            InterProductos.jTable_producto = new JTable(model);
//            InterProductos.jScrollPane1.setViewportView(InterProductos.jTable_producto);

            model.addColumn("id_producto");
            model.addColumn("nombre");
            model.addColumn("cantidad");
            model.addColumn("precio");
            model.addColumn("descripcion");
            model.addColumn("Iva");
            model.addColumn("Categoria");
            model.addColumn("estado");

            while (rs.next()) {
                precio = rs.getDouble("precio");
                porcentajeIva = rs.getInt("porcentajeIva");

                Object fila[] = new Object[8];
                for (int i = 0; i < 8; i++) {

                    if (i == 5) {
                        this.calcularIva(precio, porcentajeIva);
                        fila[i] = IVA;
                        rs.getObject(i + 1);
                    } else {
                        fila[i] = rs.getObject(i + 1);
                    }
                }
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llenar la tabla productos: " + e);
        }

        jTable_producto.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_producto.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    id_producto = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosProductoSeleccionado(id_producto);
                }
            }
        });
    }
    
    private double calcularIva(double precio, int iva){
        int p_iva = iva;
        switch (p_iva) {
            case 0: 
                IVA = 0.0;
                break;
            case 19:
                IVA = precio * 0.19;
                break;
            default:
                break;
        }
        IVA = (double) Math.round(IVA * 100)/100;
        return IVA;
    }

    private void EnviarDatosProductoSeleccionado(int id_categoria) {

        try {
            Connection con = Conexion.conectar();
            PreparedStatement pst = con.prepareStatement(
                    "select * from categoria where id_categoria = '" + id_categoria + "'");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                txt_nombre.setText(rs.getString("tipo_categoria"));
            }
            con.close();

        } catch (SQLException e) {
            System.out.println("Error al seleccionar categorias: " + e);
        }
    }

}
